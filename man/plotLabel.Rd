% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotLabel.R
\name{plotLabel}
\alias{plotLabel}
\alias{plotLabel,SpatialData-method}
\title{\code{SpatialData} label viz.}
\usage{
\S4method{plotLabel}{SpatialData}(
  x,
  i = 1,
  k = NULL,
  c = NULL,
  a = 0.5,
  pal = c("red", "green"),
  nan = NA,
  assay = 1
)
}
\arguments{
\item{x}{\code{SpatialData} object.}

\item{i}{character string or index; the label element to plot.}

\item{k}{index of the scale of an image; by default (NULL), will auto-select 
scale in order to minimize memory-usage and blurring for a target size of 
800 x 800px; use Inf to plot the lowest resolution available.}

\item{c}{the default, NULL, gives a binary image of whether or not 
a given pixel is non-zero; alternatively, a character string specifying
a \code{colData} column or row name in a \code{table} annotating \code{i}.}

\item{a}{scalar numeric in [0, 1]; alpha value passed to \code{geom_tile}.}

\item{pal}{character vector; color for discrete/continuous values
(interpolated automatically when insufficient values are provided).}

\item{nan}{character string; color for missing values (hidden by default).}

\item{assay}{character string; in case of \code{c} denoting a row name,
specifies which \code{assay} data to use (see \code{\link{valTable}}).}
}
\description{
\code{SpatialData} label viz.
}
\examples{
x <- file.path("extdata", "blobs.zarr")
x <- system.file(x, package="SpatialData")
x <- readSpatialData(x, anndataR=FALSE)

i <- "blobs_labels"
p <- plotSpatialData()

# simple binary image
p + plotLabel(x, i)

# mock up some extra data
t <- getTable(x, i)
t$id <- sample(letters, ncol(t))
table(x) <- t

# coloring by 'colData'
n <- length(unique(t$id))
pal <- hcl.colors(n, "Spectral")
p + plotLabel(x, i, "id", pal=pal)

# coloring by 'assay' data
p + plotLabel(x, i, "channel_1_sum")
}
